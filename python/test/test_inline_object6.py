# coding: utf-8

"""
    Opendatasoft's Automation API Documentation

    Opendatasoft REST API to manage your portal and its catalog

    The version of the OpenAPI document: 1.0
    Contact: support@opendatasoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from opendatasoft_automation.models.inline_object6 import InlineObject6

class TestInlineObject6(unittest.TestCase):
    """InlineObject6 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InlineObject6:
        """Test InlineObject6
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InlineObject6`
        """
        model = InlineObject6()
        if include_optional:
            return InlineObject6(
                fields = [
                    opendatasoft_automation.models.inline_object_6_fields_inner.inline_object_6_fields_inner(
                        description = '', 
                        original_name = '', 
                        label = '', 
                        type = '', 
                        annotations = [
                            opendatasoft_automation.models.inline_object_6_fields_inner_annotations_inner.inline_object_6_fields_inner_annotations_inner(
                                name = '', 
                                args = [
                                    ''
                                    ], )
                            ], 
                        name = '', )
                    ],
                records = [
                    None
                    ]
            )
        else:
            return InlineObject6(
        )
        """

    def testInlineObject6(self):
        """Test InlineObject6"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
